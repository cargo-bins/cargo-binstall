name: Build for release
runs:
  using: composite
  steps:
  - run: echo "JUST_FOR_RELEASE=true" >> $GITHUB_ENV
    shell: bash

  - uses: ./.github/actions/just-setup
    with:
      tools: cross
      cache-suffix: release

  - run: just toolchain rust-src
    shell: bash
  - run: just ci-install-deps
    shell: bash

  - name: Builds (mac)
    if: runner.os == 'macOS'
    shell: bash
    run: |
      set -ex
      CARGO_BUILD_TARGET=x86_64-apple-darwin just package
      CARGO_BUILD_TARGET=aarch64-apple-darwin just package
      just package-lipo

  - name: Builds (linux)
    if: runner.os == 'Linux'
    shell: bash
    run: |
      set -ex
      CARGO_BUILD_TARGET=x86_64-unknown-linux-musl just ci-install-deps

      CARGO_BUILD_TARGET=x86_64-unknown-linux-gnu just package
      CARGO_BUILD_TARGET=x86_64-unknown-linux-musl just package
      JUST_USE_CROSS=true CARGO_BUILD_TARGET=armv7-unknown-linux-musleabihf just package
      JUST_USE_CROSS=true CARGO_BUILD_TARGET=armv7-unknown-linux-gnueabihf just package
      JUST_USE_CROSS=true CARGO_BUILD_TARGET=aarch64-unknown-linux-musl just package
      JUST_USE_CROSS=true CARGO_BUILD_TARGET=aarch64-unknown-linux-gnu just package

  - name: Builds (windows)
    if: runner.os == 'Windows'
    shell: bash
    run: |
      set -ex
      CARGO_BUILD_TARGET=x86_64-pc-windows-msvc just package
      CARGO_BUILD_TARGET=aarch64-pc-windows-msvc just package
